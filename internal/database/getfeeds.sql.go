// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: getfeeds.sql

package database

import (
	"context"
)

const getFeeds = `-- name: GetFeeds :many

SELECT 
    f.name  AS feed_name,
    f.url   AS feed_url,
    u.name  AS user_name
FROM feeds AS f
JOIN users AS u ON f.user_id = u.id
`

type GetFeedsRow struct {
	FeedName string
	FeedUrl  string
	UserName string
}

func (q *Queries) GetFeeds(ctx context.Context) ([]GetFeedsRow, error) {
	rows, err := q.db.QueryContext(ctx, getFeeds)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetFeedsRow
	for rows.Next() {
		var i GetFeedsRow
		if err := rows.Scan(&i.FeedName, &i.FeedUrl, &i.UserName); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
